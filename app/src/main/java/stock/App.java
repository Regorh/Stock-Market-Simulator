/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stock;

import org.checkerframework.checker.units.qual.A;
import stock.controller.*;
import stock.model.GameManager;
import stock.model.Market;
import stock.model.Stock;
import stock.model.User;
import stock.view.Gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Scanner;
public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        GameController controller = new GameController();
         System.out.println(new App().getGreeting());

        //this is reading the events text file and populating the possible events
        File file = new File("src/main/java/stock/controller/events.txt");
        ArrayList<ArrayList<String>> events = new ArrayList<ArrayList<String>>();

        //creating the 3 lists, for the 3 kinds of event types
        for(int i = 0 ; i <2 ;i++ ){
            ArrayList<String> a = new ArrayList<String>();
            events.add(a);
        }
        try {

            //read the file and parse each line, checking if it should be added to events
            BufferedReader br = new BufferedReader(new FileReader(file));
            String event;
            while((event = br.readLine()) != null){
                int x = 0;
                switch(event) {

                    case "#MarketEvents":
                            x = 0;
                        break;
                    case "#UserEvents":
                            x = 1;
                        break;
                    default:
                        break;
                }
                    //adds events to their proper list, only reads in if it is longer than length 2
                    event = br.readLine();
                    while(event.length() >= 2){
                        events.get(x).add(event);
                        event = br.readLine();
                    }
            }
        }
        catch (Exception e){
            System.out.println("FILE DOES NOT EXIST, EVENTS CANNOT LOAD");
        }

        //in case no events are read, we always have at least one event the "None event
        System.out.println(events);

        //creating of children
        EventRoller roller = new EventRoller(events);
        GameManager algorithm = new GameManager();
        User user = new User(algorithm.get_avg());


        boolean isDone = false;

        while(!isDone){
            //if( PUT USER SEC = 100, OR ILLNESS OR DEBT TOO HIGH HERE)
            // isDone == true
            ArrayList<String> event = roller.roll_out();
            algorithm.next_day(event.get(0));
            user.process_event(event.get(1));


        }





    }
}
